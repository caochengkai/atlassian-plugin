<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="__MSG_gadget.planned.vs.released.chart.title__" directory_title="__MSG_gadget.planned.vs.released.chart.title__"
                 description="__MSG_gadget.planned.vs.released.chart.description__" author="dianrong"
                 height="100"
                 screenshot='#staticResourceUrl("com.atlassian.tutorial.dianrong.plugin:planned-vs-released-chart", "planned-vs-released-chart-screenshot.png")'
                 thumbnail='#staticResourceUrl("com.atlassian.tutorial.dianrong.plugin:planned-vs-released-chart", "planned-vs-released-chart-thumbnail.png")'
    >

        <Optional feature="gadget-directory">
            <Param name="categories">
                JIRA
                Charts
            </Param>
        </Optional>
        <Require feature="setprefs"/>
        <Require feature="settitle"/>
        <Require feature="dynamic-height"/>
        <Require feature="views"/>
        <Optional feature="atlassian.util"/>
        <Optional feature="auth-refresh"/>
        <Require feature="oauthpopup"/>

        #oauth
        #supportedLocales("gadget.common,gadget.planned.vs.released.chart")
    </ModulePrefs>

    <UserPref name="type" datatype="hidden"/>
    <UserPref name="id" datatype="hidden"/>
    <UserPref name="operation" datatype="hidden"/>
    <UserPref name="projectOrFilterId" datatype="hidden"/>
    <UserPref name="isPopup" datatype="hidden" default_value="false"/>
    <UserPref name="isConfigured" datatype="hidden" default_value="false" />
    <UserPref name="refresh" datatype="hidden" default_value="false"/>
    <UserPref name="period" datatype="hidden" default_value="releasedVersion"/>
    <UserPref name="previous" datatype="hidden" default_value="5"/>

    <Content type="html" view="profile,canvas,home">
        <![CDATA[

#requireResource("com.atlassian.jira.gadgets:common")
#requireResource("com.atlassian.tutorial.dianrong.plugin:dianrong.plugin-resources")
#includeResources()

<script type="text/javascript" charset="utf-8">

    AJS.Gadget({
        baseUrl: "__ATLASSIAN_BASE_URL__",
        useOauth: "/rest/gadget/1.0/currentUser",
        config: {
            descriptor: function (args) {
                var gadget = this;

                return {
                    action: "/rest/dianrong-gadget/1.0/planned-vs-released-chart/validate",
                    theme: function () {
                        if (gadgets.window.getViewportDimensions().width < 450) {
                            return "gdt top-label";
                        } else {
                            return "gdt";
                        }
                    }(),
                    fields: [AJS.gadget.fields.projectPicker(gadget, "projectOrFilterId", args.projectOptions), {
                        userpref: "period",
                        label: gadget.getMsg("gadget.planned.vs.released.chart.period.label"),
                        description: gadget.getMsg("gadget.planned.vs.released.chart.period.description"),
                        type: "select",
                        selected: gadget.getPref('period'),
                        options: [{
                            label: "Released Version",
                            value: "releasedVersion"
                        }]
                    }, {
                        userpref: "previous",
                        label: gadget.getMsg("gadget.planned.vs.released.chart.previous.label"),
                        description: gadget.getMsg("gadget.planned.vs.released.chart.previous.description"),
                        type: "text",
                        value: gadget.getPref('previous')
                    }, AJS.gadget.fields.nowConfigured()]
                };
            },
            args: function()
                    {
                        return [
                            {
                                key: "projectOptions",
                                ajaxOptions:  "/rest/gadget/1.0/filtersAndProjects?showFilters=false"

                            }


                        ];
                    }()
        },
        view: {
            enableReload: true, onResizeReload: true,onResizeAdjustHeight:true, template: function (args) {
                var gadget = this;

                var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
                var lineChartData = {
                    labels : ["January","February","March","April","May","June","July"],
                    datasets : [
                        {
                            label: "My First dataset",
                            fillColor : "rgba(220,220,220,0.2)",
                            strokeColor : "rgba(220,220,220,1)",
                            pointColor : "rgba(220,220,220,1)",
                            pointStrokeColor : "#fff",
                            pointHighlightFill : "#fff",
                            pointHighlightStroke : "rgba(220,220,220,1)",
                            data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]
                        },
                        {
                            label: "My Second dataset",
                            fillColor : "rgba(151,187,205,0.2)",
                            strokeColor : "rgba(151,187,205,1)",
                            pointColor : "rgba(151,187,205,1)",
                            pointStrokeColor : "#fff",
                            pointHighlightFill : "#fff",
                            pointHighlightStroke : "rgba(151,187,205,1)",
                            data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]
                        }
                    ]

                }

                gadget.getView().empty().html('<canvas id="canvas"></canvas>');

                setTimeout(function() {
                var ctx=AJS.$('#canvas')[0].getContext('2d');
                var chart =new Chart(ctx).Line(lineChartData, {
                    responsive: true
                });
                gadget.resize();
                }, 100);
            }, args: [{
                key: "chart", ajaxOptions: function () {
                    var gadget = this;
                        return {
                            url: "/rest/dianrong-gadget/1.0/planned-vs-released-chart/generate",
                            data: {
                                projectOrFilterId: gadgets.util.unescapeString(gadget.getPref('projectOrFilterId')),
                                period: gadget.getPref('period'),
                                previous: gadget.getPref('previous')
                            }
                        };
                }
            }]
        }
    });
</script>

        ]]>
    </Content>
</Module>